{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafal\\\\software-gpg\\\\src\\\\components\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    signup,\n    currentUser\n  } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Senha informada não é idêntica');\n    }\n\n    try {\n      setError('');\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n    } catch {\n      setError('Falha em criar conta');\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center mb-3\",\n          children: \"GPG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Cadastre-se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), currentUser.email, error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password-confirm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirme a senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordConfirmRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100 mt-4\",\n            type: \"submit\",\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: \"J\\xE1 possui uma conta? Fa\\xE7a Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Signup, \"kixBema/vOMKqmczXABNhpq/qqo=\", false, function () {\n  return [useAuth];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/rafal/software-gpg/src/components/Signup.js"],"names":["React","useRef","useState","Form","Button","Card","Alert","useAuth","Signup","emailRef","passwordRef","passwordConfirmRef","signup","currentUser","error","setError","loading","setLoading","handleSubmit","e","preventDefault","current","value","email"],"mappings":"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","sourcesContent":["\r\nimport React, {useRef, useState} from 'react'\r\nimport{ Form, Button, Card, Alert} from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const {signup, currentUser} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        if(passwordRef.current.value !== \r\n            passwordConfirmRef.current.value){\r\n                return setError('Senha informada não é idêntica')\r\n            }\r\n            try{\r\n                setError('')\r\n                setLoading(true)\r\n               await signup(emailRef.current.value, passwordRef.current.value)\r\n            }catch{\r\n                setError('Falha em criar conta')\r\n            }\r\n            setLoading(false)\r\n\r\n        \r\n    }\r\n\r\n  return (\r\n    <>\r\n    <Card>\r\n        <Card.Body>\r\n            <h1 className='text-center mb-3'>GPG</h1>\r\n            <h2 className='text-center mb-4'>Cadastre-se</h2>\r\n            {currentUser.email}\r\n            {error && <Alert variant='danger'>{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group id='email'>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type='email' ref={emailRef} required />\r\n                </Form.Group>\r\n\r\n                <Form.Group id='password'>\r\n                    <Form.Label>Senha</Form.Label>\r\n                    <Form.Control type='password' ref={passwordRef} required />\r\n                </Form.Group>\r\n\r\n                <Form.Group id='password-confirm'>\r\n                    <Form.Label>Confirme a senha</Form.Label>\r\n                    <Form.Control type='password' ref={passwordConfirmRef} required />\r\n                </Form.Group>\r\n              <Button disabled={loading} className='w-100 mt-4' type='submit' >Entrar</Button>\r\n\r\n            </Form>\r\n        </Card.Body>\r\n    </Card>\r\n    <div className='w-100 text-center mt-2'>\r\n        Já possui uma conta? Faça Login\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}