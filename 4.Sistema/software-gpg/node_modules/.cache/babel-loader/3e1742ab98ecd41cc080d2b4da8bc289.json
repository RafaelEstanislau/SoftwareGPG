{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafal\\\\OneDrive\\\\Documentos\\\\Projeto-Software\\\\PS-ES-2021-2-GPG\\\\4.Sistema\\\\software-gpg\\\\src\\\\components\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component, useEffect } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { addDoc, collection, getDocs, doc } from \"firebase/firestore\";\nimport { db, auth } from \"../firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Task() {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [workers, setWorkers] = useState([]);\n  const [taskLists, setTaskLists] = useState([]);\n  const taskCollectionRef = collection(db, \"tasks\");\n  const usersCollectionRef = collection(db, \"users\");\n  const history = useHistory();\n  const [options, setOptions] = useState();\n  useEffect(() => {\n    const getUsers = async () => {\n      const users = await getDocs(usersCollectionRef);\n      console.log(users);\n      setTaskLists(users.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    getUsers();\n  }, []);\n\n  const createTask = async () => {\n    await addDoc(taskCollectionRef, {\n      title,\n      text,\n      workers,\n      author: {\n        name: auth.currentUser.email,\n        id: auth.currentUser.uid\n      }\n    });\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-3\",\n      children: \"Crie uma nova task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"w-100 mb-3\",\n            placeholder: \"Nome da task:\",\n            onChange: event => {\n              setTitle(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \" w-100\",\n            placeholder: \"Descri\\xE7\\xE3o da task:\",\n            onChange: event => {\n              setText(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"w-100 mt-4\",\n        onClick: createTask,\n        children: \"Criar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Task, \"pdr6nNKXvE/getmub5B21zU+jOk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/rafal/OneDrive/Documentos/Projeto-Software/PS-ES-2021-2-GPG/4.Sistema/software-gpg/src/components/Task.js"],"names":["React","useState","Component","useEffect","Card","Button","addDoc","collection","getDocs","doc","db","auth","useHistory","useAuth","Task","title","setTitle","text","setText","workers","setWorkers","taskLists","setTaskLists","taskCollectionRef","usersCollectionRef","history","options","setOptions","getUsers","users","console","log","docs","map","data","id","createTask","author","name","currentUser","email","uid","push","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AAEA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,OAA7B,EAAsCC,GAAtC,QAAiD,oBAAjD;AACA,SAASC,EAAT,EAAaC,IAAb,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,yBAAxB;;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMsB,iBAAiB,GAAGhB,UAAU,CAACG,EAAD,EAAK,OAAL,CAApC;AACA,QAAMc,kBAAkB,GAAGjB,UAAU,CAACG,EAAD,EAAK,OAAL,CAArC;AACA,QAAMe,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,EAAtC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,QAAQ,GAAG,YAAY;AAC3B,YAAMC,KAAK,GAAG,MAAMrB,OAAO,CAACgB,kBAAD,CAA3B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEAP,MAAAA,YAAY,CAACO,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAgBxB,GAAD,KAAU,EAAE,GAAGA,GAAG,CAACyB,IAAJ,EAAL;AAAiBC,QAAAA,EAAE,EAAE1B,GAAG,CAAC0B;AAAzB,OAAV,CAAf,CAAD,CAAZ;AACD,KALD;;AAMAP,IAAAA,QAAQ;AACT,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMQ,UAAU,GAAG,YAAY;AAC7B,UAAM9B,MAAM,CAACiB,iBAAD,EAAoB;AAC9BR,MAAAA,KAD8B;AAE9BE,MAAAA,IAF8B;AAG9BE,MAAAA,OAH8B;AAI9BkB,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE3B,IAAI,CAAC4B,WAAL,CAAiBC,KADjB;AAENL,QAAAA,EAAE,EAAExB,IAAI,CAAC4B,WAAL,CAAiBE;AAFf;AAJsB,KAApB,CAAZ;AASAhB,IAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACD,GAXD;;AAaA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,YADZ;AAEE,YAAA,WAAW,EAAC,eAFd;AAGE,YAAA,QAAQ,EAAGC,KAAD,IAAW;AACnB3B,cAAAA,QAAQ,CAAC2B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,IAAD,CAAM,IAAN;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,QADZ;AAEE,YAAA,WAAW,EAAC,0BAFd;AAGE,YAAA,QAAQ,EAAGF,KAAD,IAAW;AACnBzB,cAAAA,OAAO,CAACyB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAsBE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAET,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eA4BE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA,kBADF;AAgCD;;GAjEQtB,I;UAOSF,U;;;KAPTE,I;AAkET,eAAeA,IAAf","sourcesContent":["import React, { useState, Component, useEffect } from \"react\";\r\n\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { addDoc, collection, getDocs, doc } from \"firebase/firestore\";\r\nimport { db, auth } from \"../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nfunction Task() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [workers, setWorkers] = useState([]);\r\n  const [taskLists, setTaskLists] = useState([]);\r\n  const taskCollectionRef = collection(db, \"tasks\");\r\n  const usersCollectionRef = collection(db, \"users\");\r\n  const history = useHistory();\r\n  const [options, setOptions] = useState();\r\n\r\n  useEffect(() => {\r\n    const getUsers = async () => {\r\n      const users = await getDocs(usersCollectionRef);\r\n      console.log(users);\r\n      \r\n      setTaskLists(users.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n    getUsers()\r\n  }, []);\r\n\r\n  const createTask = async () => {\r\n    await addDoc(taskCollectionRef, {\r\n      title,\r\n      text,\r\n      workers,\r\n      author: {\r\n        name: auth.currentUser.email,\r\n        id: auth.currentUser.uid,\r\n      },\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center mb-3\">Crie uma nova task</h1>\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <input\r\n              className=\"w-100 mb-3\"\r\n              placeholder=\"Nome da task:\"\r\n              onChange={(event) => {\r\n                setTitle(event.target.value);\r\n              }}\r\n            ></input>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <input\r\n              className=\" w-100\"\r\n              placeholder=\"Descrição da task:\"\r\n              onChange={(event) => {\r\n                setText(event.target.value);\r\n              }}\r\n            ></input>\r\n          </Card.Text>\r\n          \r\n        </Card.Body>\r\n        <Button className=\"w-100 mt-4\" onClick={createTask}>\r\n          Criar\r\n        </Button>\r\n      </Card>\r\n      <div className=\"mb-4\"></div>\r\n    </>\r\n  );\r\n}\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}